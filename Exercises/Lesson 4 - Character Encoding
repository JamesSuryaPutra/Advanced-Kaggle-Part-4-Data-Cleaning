<Setup>
The questions below will give you feedback on your work. Run the following cell to set up the feedback system.

****************
from learntools.core import binder
binder.bind(globals())
from learntools.data_cleaning.ex4 import *
print("Setup Complete")

Setup Complete
****************

<Get our environment set up>
The first thing we'll need to do is load in the libraries we'll be using.

****************
# modules we'll use
import pandas as pd
import numpy as np

# helpful character encoding module
import charset_normalizer

# set seed for reproducibility
np.random.seed(0)
****************

<1st step: What are encodings?>
You're working with a dataset composed of bytes. Run the code cell below to print a sample entry.

****************
sample_entry = b'\xa7A\xa6n'
print(sample_entry)
print('data type:', type(sample_entry))

b'\xa7A\xa6n'
data type: <class 'bytes'>
****************

You notice that it doesn't use the standard UTF-8 encoding. Use the next code cell to create a variable new_entry that changes the encoding from "big5-tw" to "utf-8". new_entry should
have the bytes datatype.

****************
# TODO: Convert to UTF-8
before = sample_entry.decode("big5-tw")
new_entry = before.encode()

# Check your answer
q1.check()

Correct

# Lines below will give you a hint or solution code
q1.hint()
q1.solution()

Hint:
Try using .decode() to get the string, then .encode() to get the bytes representation, encoded in UTF-8.

Solution:
before = sample_entry.decode("big5-tw")
new_entry = before.encode()
****************

<2nd step: Reading in files with encoding problems>
Use the code cell below to read in this file at path "../input/fatal-police-shootings-in-the-us/PoliceKillingsUS.csv". Figure out what the correct encoding should be and read in the file
to a DataFrame police_killings.

****************
# TODO: Load in the DataFrame correctly.
police_killings = pd.read_csv("../input/fatal-police-shootings-in-the-us/PoliceKillingsUS.csv", encoding='Windows-1252')

# Check your answer
q2.check()

Correct
****************

Feel free to use any additional code cells for supplemental work. To get credit for finishing this question, you'll need to run q2.check() and get a result of Correct.

****************
# (Optional) Use this code cell for any additional work.
police_killings

id	name	date	manner_of_death	armed	age	gender	race	city	state	signs_of_mental_illness	threat_level	flee	body_camera
0	3	Tim Elliot	02/01/15	shot	gun	53.0	M	A	Shelton	WA	True	attack	Not fleeing	False
1	4	Lewis Lee Lembke	02/01/15	shot	gun	47.0	M	W	Aloha	OR	False	attack	Not fleeing	False
2	5	John Paul Quintero	03/01/15	shot and Tasered	unarmed	23.0	M	H	Wichita	KS	False	other	Not fleeing	False
3	8	Matthew Hoffman	04/01/15	shot	toy weapon	32.0	M	W	San Francisco	CA	True	attack	Not fleeing	False
4	9	Michael Rodriguez	04/01/15	shot	nail gun	39.0	M	H	Evans	CO	False	attack	Not fleeing	False
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
2530	2822	Rodney E. Jacobs	28/07/17	shot	gun	31.0	M	NaN	Kansas City	MO	False	attack	Not fleeing	False
2531	2813	TK TK	28/07/17	shot	vehicle	NaN	M	NaN	Albuquerque	NM	False	attack	Car	False
2532	2818	Dennis W. Robinson	29/07/17	shot	gun	48.0	M	NaN	Melba	ID	False	attack	Car	False
2533	2817	Isaiah Tucker	31/07/17	shot	vehicle	28.0	M	B	Oshkosh	WI	False	attack	Car	True
2534	2815	Dwayne Jeune	31/07/17	shot	knife	32.0	M	B	Brooklyn	NY	True	attack	Not fleeing	False
2535 rows Ã— 14 columns

# Lines below will give you a hint or solution code
q2.hint()
q2.solution()

Hint:
If you try to guess the encoding with the first 10,000 bytes of the file, it might give you the wrong answer. Try using 100,000 or more lines of the file.

Solution:
police_killings = pd.read_csv("../input/fatal-police-shootings-in-the-us/PoliceKillingsUS.csv", encoding='Windows-1252')
****************

<3rd step: Saving your files with UTF-8 encoding>
Save a version of the police killings dataset to CSV with UTF-8 encoding. Your answer will be marked correct after saving this file.
(Note: When using the to_csv() method, supply only the name of the file (e.g., "my_file.csv"). This saves the file at the filepath "/kaggle/working/my_file.csv".)

****************
# TODO: Save the police killings dataset to CSV
police_killings.to_csv("my_file.csv")

# Check your answer
q3.check()

Correct

# Lines below will give you a hint or solution code
q3.hint()
q3.solution()

Hint:
Use .to_csv().

Solution:
police_killings.to_csv("my_file.csv")
****************
